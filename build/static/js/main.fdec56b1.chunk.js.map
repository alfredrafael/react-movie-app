{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/hooks/useHomeFetch.js","components/Home.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledAlfredoMovieLogo","img","StyledTMDBLogo","Header","className","src","alt","style","color","marginBottom","fontFamily","marginLeft","fontSize","href","target","class","float","marginRight","border","padding","borderRadius","marginTop","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","state","inputValue","timeOut","doSearch","event","callback","value","setState","clearTimeout","setTimeout","this","name","size","type","placeholder","onChange","Component","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","to","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","useState","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","useHomeFetch","searchTerm","setSearchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","JSON","parse","setItem","stringify","useMovieFetch","Fragment","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdec56b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.div`\n  background: #040182;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    // min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledAlfredoMovieLogo = styled.img`\n  width: 7%;\n  margin-top: 7px;\n\n  @media screen and (max-width: 500px) {\n    width: 15%;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 3.5%;\n  margin-top: 8px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 10%;\n    margin-top: 0px;\n  }\n`;\n\nexport const StyledLinkedinLogo = styled.img`\n  width: 70px;\n  margin-top: 8px;\n  float: right;\n  margin-right: 7px;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n\nexport const StyledInfoLogo = styled.img`\n  width: 70px;\n  margin-top: 8px;\n  float: right;\n  margin-right: 7px;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","/* ////////////////////////////////////////////////////////////////////////////////////*/\nimport React from \"react\"; //\nimport { Link } from \"@reach/router\"; //\nimport {\n  StyledHeader,\n  StyledAlfredoMovieLogo,\n  StyledTMDBLogo,\n  StyledLinkedinLogo,\n  StyledInfoLogo,\n} from \"../styles/StyledHeader\"; //                                           //\n/* /////////////////////////////////////////////////////////////////////////////////// */\n\n//* ///////////////////////////////////////////////////////////////////////////////// *//\nimport RMDBLogo from \"../images/reactMovie_logo.png\";\nimport TMDBLogo from \"../images/tmdb_logo.svg\";\n//* ///////////////////////////////////////////////////////////////////////////////// *//\n\nconst Header = () => (\n  <StyledHeader>\n    <div className=\"header-content\">\n      {/* //////////////////////////////////////////////////////////////////////// */}\n      <StyledAlfredoMovieLogo\n        src={\n          \"https://rmrdetailing.com/wp-content/uploads/2021/10/AR-logo-white.png\"\n        }\n        alt=\"rmdb-logo\"\n      />{\" \"}\n      <span\n        style={{\n          color: \"white\",\n          marginBottom: \"5%\",\n          fontFamily: \"Abel, sans-serif\",\n          marginLeft: \"1%\",\n          fontSize: \"200%\",\n        }}\n      >\n        Movie App\n      </span>\n      {/* //////////////////////////////////////////////////////////////////////// */}\n      <StyledTMDBLogo\n        src={\n          \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\n        }\n        alt=\"tmdb-logo\"\n      />\n      {/* //////////////////////////////////////////////////////////////////////// */}\n      <a href={\"https://www.linkedin.com/in/alfredo-rafael/\"} target=\"_blank\">\n        <i\n          class=\"fab fa-linkedin\"\n          style={{\n            color: \"white\",\n            float: \"right\",\n            fontSize: \"150%\",\n            marginRight: \"2%\",\n            border: \"1px solid white\",\n            padding: \".4% .5%\",\n            borderRadius: \"5px\",\n            marginTop: \".5%\",\n          }}\n        ></i>\n      </a>\n      {/* //////////////////////////////////////////////////////////////////////// */}\n      {/*  <StyledInfoLogo src={'https://alfredorafael.com/wp-content/uploads/2020/04/InfoMovieApp.png'} alt=\"Info Logo\"/>  */}\n    </div>\n  </StyledHeader>\n);\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { \n  SEARCH_BASE_URL, \n  POPULAR_BASE_URL,\n  API_URL, API_KEY, \n  IMAGE_BASE_URL, \n  BACKDROP_SIZE, \n  POSTER_SIZE \n};\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 570px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//* //////////////////////////////////////////////////////////////////////// *//\n\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\n\nconst HeroImage = ({ image, title, text }) => (\n\n  <StyledHeroImage image={image}>\n    \n    <div className=\"heroimage-content\">\n      <div className=\"heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n    \n  </StyledHeroImage>\n)\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #040182;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: azure;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: blue;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: navy;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 34px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: blue;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledSearchBar,\n  StyledSearchBarContent,\n} from '../styles/StyledSearchBar';\n\nclass SearchBar extends Component {\n  state = { inputValue: '' };\n\n  timeOut = null;\n\n  doSearch = event => {\n    const { callback } = this.props;\n    const { value } = event.target;\n\n    this.setState({ inputValue: value });\n    clearTimeout(this.timeOut);\n\n    this.timeOut = setTimeout(() => {\n      const { inputValue } = this.state;\n      callback(inputValue);\n    }, 500);\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <StyledSearchBar>\n        <StyledSearchBarContent>\n          <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search Movie\"\n            onChange={this.doSearch}\n            value={inputValue}\n          />\n        </StyledSearchBarContent>\n      </StyledSearchBar>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n//* //////////////////////////////////////////////////////////////////////// *//\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\n\nconst Grid = ({ header, children }) => (\n\n  <StyledGrid>\n    \n  {/* ////////////////////////////////////////////////////////////////////// */}\n    <h1>\n      {header}\n    </h1>\n  {/* ////////////////////////////////////////////////////////////////////// */}\n    \n\n  {/* ////////////////////////////////////////////////////////////////////// */}\n    <StyledGridContent>\n      {children}\n    </StyledGridContent>\n  {/* ////////////////////////////////////////////////////////////////////// */}\n  \n    </StyledGrid>\n);\n\nGrid.propTypes = {\n  header: PropTypes.string,\n}\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateMovieThumb 0.5s;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, clickable }) => (\n  <StyledMovieThumb>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n    ) : (\n      <img src={image} alt=\"moviethumb\" />\n    )}\n  </StyledMovieThumb>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n}\n\nexport default MovieThumb;\n\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';                                                    //\nimport PropTypes from 'prop-types';                                           //\n//* //////////////////////////////////////////////////////////////////////// *//\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => {\n\n  return(\n  //  ----------------------------------------------------------------------- //\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}> \n    {text}\n  </StyledLoadMoreBtn>\n  //  ---------------------------------------------------------------------- //\n  )\n};\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func,\n}\n\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () =><StyledSpinner />\n\nexport default Spinner;","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: result.results[1],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n      fetchMovies(POPULAR_BASE_URL);\n    \n  }, [])\n\n  \n  \n  \n  \n  \n  // useEffect(() => {\n  //   if (sessionStorage.homeState) {\n  //     setState(JSON.parse(sessionStorage.homeState));\n  //     setLoading(false)\n  //   } else {\n  //     fetchMovies(POPULAR_BASE_URL);\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   if(!state.searchTerm) {\n  //     sessionStorage.setItem('homeState', JSON.stringify(state));\n  //   }\n  // }, [state])\n\n  return [{ state, loading, error}, fetchMovies];\n}","import React, { useState } from 'react';\nimport {\n  POPULAR_BASE_URL,\n  SEARCH_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL,\n} from '../config';\n\n// import Components\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error,\n    },\n    fetchMovies,\n  ] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n\n  }\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n    fetchMovies(endpoint);\n\n  }\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (!movies[0]) return <Spinner />;\n\n  return (\n    <>\n      {!searchTerm && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n          title={heroImage.original_title}\n          text={heroImage.overview}\n        />\n      )}\n      <SearchBar callback={searchMovies} />\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #040160;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledNavigation } from '../styles/StyledNavigation';\n\nconst Navigation = ({ movie }) => (\n  <StyledNavigation>\n    <div className=\"navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>|</p>\n      <p>{movie}</p>\n    </div>\n  </StyledNavigation>\n);\n\nNavigation.propTypes = {\n  movie: PropTypes.string,\n}\n\nexport default Navigation;\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 430px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\n//* //////////////////////////////////////////////////////////////////////// *//\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\n//* //////////////////////////////////////////////////////////////////////// *//\nimport MovieThumb from './MovieThumb';\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\n\nconst MovieInfo = ({ movie }) => (\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\n    <div className=\"movieinfo-content\">\n      \n\n      <div className=\"movieinfo-thumb\">\n  {/* /////////////////////////////////////////////////////////////////////// */}    \n        <MovieThumb\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            clickable={false}\n            alt=\"moviethumb\"\n          />\n  {/* ////////////////////////////////////////////////////////////////////// */}\n      </div>\n\n\n\n    <div className=\"movieinfo-text\">\n\n        {/* ////////////////////// */}\n          <h1>{movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{movie.overview}</p>\n        {/* ////////////////////// */}\n\n        \n\n        {/* ////////////////////// */}\n          <div className=\"rating-director\">\n              <div>\n                <h3>IMDB RATING</h3>\n              <div className=\"score\">{movie.vote_average}</div>\n          </div>\n        {/* ////////////////////// */}\n\n\n\n        {/* ////////////////////// */}\n        <div className=\"director\">\n          <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n              {movie.directors.map(element => (\n                <p key={element.credit_id}>{element.name}</p>\n              ))}\n        </div>\n        {/* ////////////////////// */}\n\n        \n\n      </div>\n    </div>\n  </div>\n\n  </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array,\n}\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #040160;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\n//* //////////////////////////////////////////////////////////////////////// *//\nimport { calcTime, convertMoney } from '../../helpers';\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\n//* //////////////////////////////////////////////////////////////////////// *//\n\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n\n  <StyledMovieInfoBar>\n   <div className=\"movieinfobar-content\">\n\n\n  {/* //////////////////////////////////////////////////////////////////////// */}\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Running time: {calcTime(time)}\n        </span>\n      </div>\n  {/* //////////////////////////////////////////////////////////////////////// */}\n\n\n  \n  {/* //////////////////////////////////////////////////////////////////////// */}\n    <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n  {/* //////////////////////////////////////////////////////////////////////// */}\n  \n\n  \n  {/* //////////////////////////////////////////////////////////////////////// */}\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n  {/* //////////////////////////////////////////////////////////////////////// */}\n\n    </div>\n  </StyledMovieInfoBar>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number,\n}\n\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #040160;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","//* //////////////////////////////////////////////////////////////////////// *//\nimport React from 'react';                                                    //\nimport PropTypes from 'prop-types';                                           //\n//* //////////////////////////////////////////////////////////////////////// *//\n\n//* //////////////////////////////////////////////////////////////////////// *//\nimport NoImage from '../images/no_image.jpg';                                 //\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';                    //\nimport { StyledActor } from '../styles/StyledActor';                          //\n//* //////////////////////////////////////////////////////////////////////// *//\n\nconst Actor = ({ actor }) => (\n\n  <StyledActor>\n\n  {/*/////////////////////////////////////////////////////////////////*/}\n    <img \n      src={\n        actor.profile_path\n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n          : NoImage\n      }\n      alt=\"actorthumb\"\n    />\n  {/*/////////////////////////////////////////////////////////////////*/}\n\n\n\n  {/*/////////////////////////////////////////////////////////////////*/}\n    <span className=\"actor-name\">{actor.name}</span>\n  {/*/////////////////////////////////////////////////////////////////*/}\n\n  \n\n  {/*/////////////////////////////////////////////////////////////////*/}\n    <span className=\"actor-character\">{actor.character}</span>\n  {/*/////////////////////////////////////////////////////////////////*/}\n\n  </StyledActor>\n);\n\n\nActor.propTypes = {\n  actor: PropTypes.object,\n}\n\nexport default Actor;\n","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(\n        member => member.job === 'Director'\n      );\n\n      setState({\n        ...result,\n        actors: creditsResult.cast,\n        directors,\n      })\n\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId])\n\n  useEffect(() => {\n    if (localStorage[movieId]) {\n      setState(JSON.parse(localStorage[movieId]));\n      setLoading(false);\n    } else {\n      fetchData();\n    }\n  }, [fetchData, movieId]);\n\n  useEffect(() => {\n    localStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state])\n\n  return [state, loading, error];\n}","import React from 'react';\n// Components\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport { useMovieFetch } from './hooks/useMovieFetch';\n\nconst Movie = ({ movieId }) => {\n  const [movie, loading, error] = useMovieFetch(movieId);\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (loading) return <Spinner />;\n\n  return (\n  <React.Fragment>\n    <Navigation movie={movie.original_title} />\n    <MovieInfo movie={movie} />\n    <MovieInfoBar\n      time={movie.runtime}\n      budget={movie.budget}\n      revenue={movie.revenue}\n    />\n    <Grid header=\"Actors\">\n      {movie.actors.map(actor => (\n        <Actor key={actor.credit_id} actor={actor} />\n      ))}     \n    </Grid>\n  </React.Fragment>\n  )\n};\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => <div>Whoooops ... nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n  <>\n    <Header />\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />      \n    </Router>\n    <GlobalStyle />\n  </>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}