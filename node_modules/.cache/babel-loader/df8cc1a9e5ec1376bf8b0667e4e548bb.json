{"ast":null,"code":"import _defineProperty from \"/Users/alfredrafael/repositories/reactPractices/movieApp/MovieApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/alfredrafael/repositories/reactPractices/movieApp/MovieApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\nexport const useHomeFetch = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => _objectSpread({}, prev, {\n        movies: isLoadMore !== -1 ? [...prev.movies, ...result.results] : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  }; // Fetch popular movies initially on mount\n\n\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n  useEffect(() => {\n    if (!state.searchTerm) {\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [state]);\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/alfredrafael/repositories/reactPractices/movieApp/MovieApp/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","POPULAR_BASE_URL","useHomeFetch","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endpoint","isLoadMore","search","result","fetch","json","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","sessionStorage","homeState","JSON","parse","searchTerm","setItem","stringify"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACNH,QAAQ,CAAC;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAD,CADF;AAAA;AAAA,QACzBC,KADyB;AAAA,QAClBC,QADkB;;AAAA,qBAEFN,QAAQ,CAAC,IAAD,CAFN;AAAA;AAAA,QAEzBO,OAFyB;AAAA,QAEhBC,UAFgB;;AAAA,qBAGNR,QAAQ,CAAC,KAAD,CAHF;AAAA;AAAA,QAGzBS,KAHyB;AAAA,QAGlBC,QAHkB;;AAKhC,QAAMC,WAAW,GAAG,MAAMC,QAAN,IAAkB;AACpCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAnB;;AAEA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACJ,QAAD,CAAZ,EAAwBK,IAAxB,EAArB;AACAX,MAAAA,QAAQ,CAACY,IAAI,sBACRA,IADQ;AAEXd,QAAAA,MAAM,EACJS,UAAU,KAAK,CAAC,CAAhB,GACA,CAAC,GAAGK,IAAI,CAACd,MAAT,EAAiB,GAAGW,MAAM,CAACI,OAA3B,CADA,GAEA,CAAC,GAAGJ,MAAM,CAACI,OAAX,CALS;AAMXC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBL,MAAM,CAACI,OAAP,CAAe,CAAf,CANlB;AAOXE,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAPT;AAQXC,QAAAA,UAAU,EAAER,MAAM,CAACS;AARR,QAAL,CAAR;AAWD,KAbD,CAaE,OAAOf,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAxBD,CALgC,CA+BhC;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,cAAc,CAACC,SAAnB,EAA8B;AAC5BtB,MAAAA,QAAQ,CAACuB,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,SAA1B,CAAD,CAAR;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO;AACLG,MAAAA,WAAW,CAACT,gBAAD,CAAX;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACI,KAAK,CAAC0B,UAAV,EAAsB;AACpBJ,MAAAA,cAAc,CAACK,OAAf,CAAuB,WAAvB,EAAoCH,IAAI,CAACI,SAAL,CAAe5B,KAAf,CAApC;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,SAAO,CAAC;AAAEA,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA2BE,WAA3B,CAAP;AACD,CAhDM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false)\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, [])\n\n  useEffect(() => {\n    if(!state.searchTerm) {\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [state])\n\n  return [{ state, loading, error}, fetchMovies];\n}"]},"metadata":{},"sourceType":"module"}